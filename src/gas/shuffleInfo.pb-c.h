/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: shuffleInfo.proto */

#ifndef PROTOBUF_C_shuffleInfo_2eproto__INCLUDED
#define PROTOBUF_C_shuffleInfo_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct ShuffleInfo__ReorderInfo ShuffleInfo__ReorderInfo;
typedef struct ShuffleInfo__ReorderInfo__BinaryInfo ShuffleInfo__ReorderInfo__BinaryInfo;
typedef struct ShuffleInfo__ReorderInfo__LayoutInfo ShuffleInfo__ReorderInfo__LayoutInfo;
typedef struct ShuffleInfo__ReorderInfo__FixupInfo ShuffleInfo__ReorderInfo__FixupInfo;
typedef struct ShuffleInfo__ReorderInfo__FixupInfo__FixupTuple ShuffleInfo__ReorderInfo__FixupInfo__FixupTuple;
typedef struct ShuffleInfo__ReorderInfo__CCRLimitation ShuffleInfo__ReorderInfo__CCRLimitation;
typedef struct ShuffleInfo__Metadata ShuffleInfo__Metadata;
typedef struct ShuffleInfo__Metadata__InstInfo ShuffleInfo__Metadata__InstInfo;
typedef struct ShuffleInfo__Metadata__FunInfo ShuffleInfo__Metadata__FunInfo;
typedef struct ShuffleInfo__Metadata__FixupInfo ShuffleInfo__Metadata__FixupInfo;
typedef struct ShuffleInfo__Metadata__GoldInfo ShuffleInfo__Metadata__GoldInfo;


/* --- enums --- */


/* --- messages --- */

struct  ShuffleInfo__ReorderInfo__BinaryInfo
{
  ProtobufCMessage base;
  /*
   * PLACEHOLDER FOR LINKER
   */
  protobuf_c_boolean has_rand_obj_offset;
  uint64_t rand_obj_offset;
};
#define SHUFFLE_INFO__REORDER_INFO__BINARY_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&shuffle_info__reorder_info__binary_info__descriptor) \
    , 0, 0 }


struct  ShuffleInfo__ReorderInfo__LayoutInfo
{
  ProtobufCMessage base;
  /*
   * All alignments between fn/bbl are included here
   */
  protobuf_c_boolean has_bb_size;
  uint32_t bb_size;
  /*
   * BBL|FUN|OBJ
   */
  protobuf_c_boolean has_type;
  uint32_t type;
  protobuf_c_boolean has_bb_fallthrough;
  protobuf_c_boolean bb_fallthrough;
  /*
   * section identifier for c++ mutiple sections
   */
  protobuf_c_boolean has_section;
  uint32_t section;
  /*
   * [generalSource(=0) | hasInlineAssembly(=1) | standaloneAssembly(=2)]
   */
  protobuf_c_boolean has_src_type;
  uint32_t src_type;
  char *info;
};
#define SHUFFLE_INFO__REORDER_INFO__LAYOUT_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&shuffle_info__reorder_info__layout_info__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, NULL }


struct  ShuffleInfo__ReorderInfo__FixupInfo__FixupTuple
{
  ProtobufCMessage base;
  protobuf_c_boolean has_offset;
  uint64_t offset;
  /*
   *0-1base&2-3target->(Out|PC|VALUE|INDEX) 4->isRela 5->is_new_section 6->isJump 7->isRAND 8->isRELOC [16:31]->reloc_type
   */
  protobuf_c_boolean has_type;
  uint32_t type;
  /*
   *0->is_new_section 1->isJump 2->isRAND 3->isRELOC [8:23]->reloc_type
   */
  protobuf_c_boolean has_base_bbl_sym;
  uint64_t base_bbl_sym;
  protobuf_c_boolean has_base_section;
  uint32_t base_section;
  protobuf_c_boolean has_target_bbl_sym;
  uint64_t target_bbl_sym;
  protobuf_c_boolean has_target_section;
  uint32_t target_section;
  protobuf_c_boolean has_section;
  uint32_t section;
  protobuf_c_boolean has_add;
  int64_t add;
  protobuf_c_boolean has_step;
  uint32_t step;
  char *info;
};
#define SHUFFLE_INFO__REORDER_INFO__FIXUP_INFO__FIXUP_TUPLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&shuffle_info__reorder_info__fixup_info__fixup_tuple__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, NULL }


/*
 * Fixup info in ELF from LLVM
 */
struct  ShuffleInfo__ReorderInfo__FixupInfo
{
  ProtobufCMessage base;
  size_t n_text;
  ShuffleInfo__ReorderInfo__FixupInfo__FixupTuple **text;
  size_t n_rodata;
  ShuffleInfo__ReorderInfo__FixupInfo__FixupTuple **rodata;
  size_t n_data;
  ShuffleInfo__ReorderInfo__FixupInfo__FixupTuple **data;
  size_t n_datarel;
  ShuffleInfo__ReorderInfo__FixupInfo__FixupTuple **datarel;
  size_t n_initarray;
  ShuffleInfo__ReorderInfo__FixupInfo__FixupTuple **initarray;
  size_t n_got;
  ShuffleInfo__ReorderInfo__FixupInfo__FixupTuple **got;
  size_t n_init;
  ShuffleInfo__ReorderInfo__FixupInfo__FixupTuple **init;
  size_t n_fini;
  ShuffleInfo__ReorderInfo__FixupInfo__FixupTuple **fini;
};
#define SHUFFLE_INFO__REORDER_INFO__FIXUP_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&shuffle_info__reorder_info__fixup_info__descriptor) \
    , 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL }


/*
 * CCR's limitation
 */
struct  ShuffleInfo__ReorderInfo__CCRLimitation
{
  ProtobufCMessage base;
  protobuf_c_boolean has_all_obj;
  uint64_t all_obj;
  protobuf_c_boolean has_hybrid_obj;
  uint64_t hybrid_obj;
  protobuf_c_boolean has_static_got;
  uint64_t static_got;
  protobuf_c_boolean has_silicon_errata;
  uint64_t silicon_errata;
  protobuf_c_boolean has_tls_opt;
  uint64_t tls_opt;
  protobuf_c_boolean has_got_opt;
  uint64_t got_opt;
  protobuf_c_boolean has_got_target;
  uint64_t got_target;
  protobuf_c_boolean has_tls_got_target;
  uint64_t tls_got_target;
  protobuf_c_boolean has_plt_target;
  uint64_t plt_target;
  protobuf_c_boolean has_merged_target;
  uint64_t merged_target;
  protobuf_c_boolean has_ifunc_target;
  uint64_t ifunc_target;
  size_t n_missrandfile;
  char **missrandfile;
};
#define SHUFFLE_INFO__REORDER_INFO__CCRLIMITATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&shuffle_info__reorder_info__ccrlimitation__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,NULL }


struct  ShuffleInfo__ReorderInfo
{
  ProtobufCMessage base;
  ShuffleInfo__ReorderInfo__BinaryInfo *bin;
  size_t n_layout;
  ShuffleInfo__ReorderInfo__LayoutInfo **layout;
  size_t n_fixup;
  ShuffleInfo__ReorderInfo__FixupInfo **fixup;
  ShuffleInfo__ReorderInfo__CCRLimitation *ccr_limitation;
};
#define SHUFFLE_INFO__REORDER_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&shuffle_info__reorder_info__descriptor) \
    , NULL, 0,NULL, 0,NULL, NULL }


struct  ShuffleInfo__Metadata__InstInfo
{
  ProtobufCMessage base;
  uint32_t offset;
  uint32_t size;
};
#define SHUFFLE_INFO__METADATA__INST_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&shuffle_info__metadata__inst_info__descriptor) \
    , 0, 0 }


struct  ShuffleInfo__Metadata__FunInfo
{
  ProtobufCMessage base;
  /*
   * address
   */
  uint32_t section;
  uint32_t offset;
  /*
   * inst_list
   */
  size_t n_insts;
  ShuffleInfo__Metadata__InstInfo **insts;
  /*
   * other
   */
  char *info;
};
#define SHUFFLE_INFO__METADATA__FUN_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&shuffle_info__metadata__fun_info__descriptor) \
    , 0, 0, 0,NULL, NULL }


struct  ShuffleInfo__Metadata__FixupInfo
{
  ProtobufCMessage base;
  /*
   * address
   */
  uint64_t offset;
  uint32_t section;
  /*
   * addressing mode
   */
  /*
   *0-1base->(Out|PC|VALUE|INDEX) 2-3target->(Out|PC|VALUE|INDEX) 4->isRela 5->is_new_section 6->isJump 7->isRAND 8->isRELOC 9->isGOT [16:31]->reloc_type
   */
  uint32_t type;
  uint64_t base_bbl_sym;
  uint32_t base_section;
  uint64_t target_bbl_sym;
  uint32_t target_section;
  protobuf_c_boolean has_add;
  int64_t add;
  protobuf_c_boolean has_step;
  uint32_t step;
  /*
   * other
   */
  char *info;
};
#define SHUFFLE_INFO__METADATA__FIXUP_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&shuffle_info__metadata__fixup_info__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, NULL }


struct  ShuffleInfo__Metadata__GoldInfo
{
  ProtobufCMessage base;
  protobuf_c_boolean has_all_obj;
  uint64_t all_obj;
  protobuf_c_boolean has_norand_obj;
  uint64_t norand_obj;
  /*
   * fixup add
   */
  protobuf_c_boolean has_static_got;
  uint64_t static_got;
  /*
   * fixup update
   */
  protobuf_c_boolean has_silicon_errata;
  uint64_t silicon_errata;
  protobuf_c_boolean has_tls_opt;
  uint64_t tls_opt;
  protobuf_c_boolean has_got_opt;
  uint64_t got_opt;
  /*
   * fixup target update
   */
  protobuf_c_boolean has_got_target;
  uint64_t got_target;
  protobuf_c_boolean has_tls_got_target;
  uint64_t tls_got_target;
  protobuf_c_boolean has_plt_target;
  uint64_t plt_target;
  protobuf_c_boolean has_merged_target;
  uint64_t merged_target;
  protobuf_c_boolean has_ifunc_target;
  uint64_t ifunc_target;
  size_t n_missrandfile;
  char **missrandfile;
  protobuf_c_boolean has_c_fun;
  uint64_t c_fun;
};
#define SHUFFLE_INFO__METADATA__GOLD_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&shuffle_info__metadata__gold_info__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,NULL, 0, 0 }


struct  ShuffleInfo__Metadata
{
  ProtobufCMessage base;
  size_t n_funs;
  ShuffleInfo__Metadata__FunInfo **funs;
  size_t n_fixups;
  ShuffleInfo__Metadata__FixupInfo **fixups;
  size_t n_otherfixups;
  ShuffleInfo__Metadata__FixupInfo **otherfixups;
  ShuffleInfo__Metadata__GoldInfo *goldinfo;
};
#define SHUFFLE_INFO__METADATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&shuffle_info__metadata__descriptor) \
    , 0,NULL, 0,NULL, 0,NULL, NULL }


/* ShuffleInfo__ReorderInfo__BinaryInfo methods */
void   shuffle_info__reorder_info__binary_info__init
                     (ShuffleInfo__ReorderInfo__BinaryInfo         *message);
/* ShuffleInfo__ReorderInfo__LayoutInfo methods */
void   shuffle_info__reorder_info__layout_info__init
                     (ShuffleInfo__ReorderInfo__LayoutInfo         *message);
/* ShuffleInfo__ReorderInfo__FixupInfo__FixupTuple methods */
void   shuffle_info__reorder_info__fixup_info__fixup_tuple__init
                     (ShuffleInfo__ReorderInfo__FixupInfo__FixupTuple         *message);
/* ShuffleInfo__ReorderInfo__FixupInfo methods */
void   shuffle_info__reorder_info__fixup_info__init
                     (ShuffleInfo__ReorderInfo__FixupInfo         *message);
/* ShuffleInfo__ReorderInfo__CCRLimitation methods */
void   shuffle_info__reorder_info__ccrlimitation__init
                     (ShuffleInfo__ReorderInfo__CCRLimitation         *message);
/* ShuffleInfo__ReorderInfo methods */
void   shuffle_info__reorder_info__init
                     (ShuffleInfo__ReorderInfo         *message);
size_t shuffle_info__reorder_info__get_packed_size
                     (const ShuffleInfo__ReorderInfo   *message);
size_t shuffle_info__reorder_info__pack
                     (const ShuffleInfo__ReorderInfo   *message,
                      uint8_t             *out);
size_t shuffle_info__reorder_info__pack_to_buffer
                     (const ShuffleInfo__ReorderInfo   *message,
                      ProtobufCBuffer     *buffer);
ShuffleInfo__ReorderInfo *
       shuffle_info__reorder_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   shuffle_info__reorder_info__free_unpacked
                     (ShuffleInfo__ReorderInfo *message,
                      ProtobufCAllocator *allocator);
/* ShuffleInfo__Metadata__InstInfo methods */
void   shuffle_info__metadata__inst_info__init
                     (ShuffleInfo__Metadata__InstInfo         *message);
/* ShuffleInfo__Metadata__FunInfo methods */
void   shuffle_info__metadata__fun_info__init
                     (ShuffleInfo__Metadata__FunInfo         *message);
/* ShuffleInfo__Metadata__FixupInfo methods */
void   shuffle_info__metadata__fixup_info__init
                     (ShuffleInfo__Metadata__FixupInfo         *message);
/* ShuffleInfo__Metadata__GoldInfo methods */
void   shuffle_info__metadata__gold_info__init
                     (ShuffleInfo__Metadata__GoldInfo         *message);
/* ShuffleInfo__Metadata methods */
void   shuffle_info__metadata__init
                     (ShuffleInfo__Metadata         *message);
size_t shuffle_info__metadata__get_packed_size
                     (const ShuffleInfo__Metadata   *message);
size_t shuffle_info__metadata__pack
                     (const ShuffleInfo__Metadata   *message,
                      uint8_t             *out);
size_t shuffle_info__metadata__pack_to_buffer
                     (const ShuffleInfo__Metadata   *message,
                      ProtobufCBuffer     *buffer);
ShuffleInfo__Metadata *
       shuffle_info__metadata__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   shuffle_info__metadata__free_unpacked
                     (ShuffleInfo__Metadata *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*ShuffleInfo__ReorderInfo__BinaryInfo_Closure)
                 (const ShuffleInfo__ReorderInfo__BinaryInfo *message,
                  void *closure_data);
typedef void (*ShuffleInfo__ReorderInfo__LayoutInfo_Closure)
                 (const ShuffleInfo__ReorderInfo__LayoutInfo *message,
                  void *closure_data);
typedef void (*ShuffleInfo__ReorderInfo__FixupInfo__FixupTuple_Closure)
                 (const ShuffleInfo__ReorderInfo__FixupInfo__FixupTuple *message,
                  void *closure_data);
typedef void (*ShuffleInfo__ReorderInfo__FixupInfo_Closure)
                 (const ShuffleInfo__ReorderInfo__FixupInfo *message,
                  void *closure_data);
typedef void (*ShuffleInfo__ReorderInfo__CCRLimitation_Closure)
                 (const ShuffleInfo__ReorderInfo__CCRLimitation *message,
                  void *closure_data);
typedef void (*ShuffleInfo__ReorderInfo_Closure)
                 (const ShuffleInfo__ReorderInfo *message,
                  void *closure_data);
typedef void (*ShuffleInfo__Metadata__InstInfo_Closure)
                 (const ShuffleInfo__Metadata__InstInfo *message,
                  void *closure_data);
typedef void (*ShuffleInfo__Metadata__FunInfo_Closure)
                 (const ShuffleInfo__Metadata__FunInfo *message,
                  void *closure_data);
typedef void (*ShuffleInfo__Metadata__FixupInfo_Closure)
                 (const ShuffleInfo__Metadata__FixupInfo *message,
                  void *closure_data);
typedef void (*ShuffleInfo__Metadata__GoldInfo_Closure)
                 (const ShuffleInfo__Metadata__GoldInfo *message,
                  void *closure_data);
typedef void (*ShuffleInfo__Metadata_Closure)
                 (const ShuffleInfo__Metadata *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor shuffle_info__reorder_info__descriptor;
extern const ProtobufCMessageDescriptor shuffle_info__reorder_info__binary_info__descriptor;
extern const ProtobufCMessageDescriptor shuffle_info__reorder_info__layout_info__descriptor;
extern const ProtobufCMessageDescriptor shuffle_info__reorder_info__fixup_info__descriptor;
extern const ProtobufCMessageDescriptor shuffle_info__reorder_info__fixup_info__fixup_tuple__descriptor;
extern const ProtobufCMessageDescriptor shuffle_info__reorder_info__ccrlimitation__descriptor;
extern const ProtobufCMessageDescriptor shuffle_info__metadata__descriptor;
extern const ProtobufCMessageDescriptor shuffle_info__metadata__inst_info__descriptor;
extern const ProtobufCMessageDescriptor shuffle_info__metadata__fun_info__descriptor;
extern const ProtobufCMessageDescriptor shuffle_info__metadata__fixup_info__descriptor;
extern const ProtobufCMessageDescriptor shuffle_info__metadata__gold_info__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_shuffleInfo_2eproto__INCLUDED */
